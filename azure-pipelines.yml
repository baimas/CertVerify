trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Variável para nomear a imagem Docker
  imageName: 'certverify'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Instalar dependências'

- task: Docker@2
  inputs:
    containerRegistry: '$(dockerRegistryServiceConnection)'
    repository: '$(imageName)'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: |
      $(Build.BuildId)
  displayName: 'Build e Push Docker Image'

- script: |
    echo "Carregando imagem Docker no Minikube"
    minikube image load $(imageName):$(Build.BuildId)
  displayName: 'Carregar imagem Docker no Minikube'
  condition: succeeded()

- task: Kubernetes@1
  inputs:
    connectionType: 'Kubeconfig'
    kubeconfig: '$(KUBECONFIG)'
    command: 'apply'
    useConfigurationFile: true
    configuration: '$(Pipeline.Workspace)/manifests/deployment.yaml'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'
  displayName: 'Deploy para Minikube'
